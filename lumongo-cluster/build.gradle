dependencies {	
    //compile project(':lumongo-common') //pulled in by client
    compile project(':lumongo-storage')	
    compile project(':lumongo-client') //needed for admin tools
    compile 'com.hazelcast:hazelcast:2.4'
    compile 'net.sf.jopt-simple:jopt-simple:4.3'
    compile 'org.apache.lucene:lucene-facet:4.0.0'
    compile 'org.apache.lucene:lucene-queryparser:4.0.0'
    compile 'org.apache.lucene:lucene-analyzers-common:4.0.0'
}

jar {
	doFirst {
		String jarClassPath = ""
		for (File file : sourceSets.main.compileClasspath) {
			jarClassPath += " " + file.name
		}
		manifest {
			attributes("Class-Path" : jarClassPath,
					"Main-Class" : "org.lumongo.server.StartNode")
		}
	}
}


task createArchive(dependsOn: jar, type: Tar) {
    compression = Compression.GZIP
    destinationDir = rootProject.file("archives")
    from configurations.runtime
    from configurations.archives.allArtifacts.findAll { !"sources".equals(it.classifier)}.file
    from (project.file("scripts")) {
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens : [ 'version': version.toString() , 'project' : project.name ])
    }

}
				
task createDeploy(dependsOn: jar, type: Copy) {
    into rootProject.file("deploy")
    from configurations.runtime
	from configurations.archives.allArtifacts.findAll { !"sources".equals(it.classifier)}.file
    from (project.file("scripts")) {
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens : [ 'version': version.toString() , 'project' : project.name ])
    }
}
						
